<h2>What is IntelliJ?</h2>
IntelliJ is an IDE (Integrated Development Environment) developed by JetBrains mainly to aid in the development of Java applications but can also handle applications using other coding languages. IntelliJ was first released in 2001 and features a Community version and an Ultimate version. The Community version can be downloaded and used free of charge while the Ultimate version, which includes more features, must be paid for.

The Ultimate Edition has a 30 day trial option once installed.
<h2><a id="user-content-how-to-get-intellij" class="anchor" style="color: #4078c0;" href="https://github.com/CourseReps/ECEN489-Spring2015/wiki/intellij#how-to-get-intellij"></a>How to get IntelliJ</h2>
To begin using IntelliJ follow the steps given below:
<ul>
 	<li>Go to <a style="color: #4078c0;" href="https://www.jetbrains.com/idea/download/">https://www.jetbrains.com/idea/download/</a> or if you are on the BBD LAN -\\fileserver\Installs\JetBrains</li>
 	<li>Click the Download Community (or Download Ultimate) button</li>
 	<li>Go to your Downloads directory and run the executable file that was downloaded (File should be ideaIC-XX.X.X, where the Xs represent the version)</li>
 	<li>Follow the steps given by the installation wizard</li>
</ul>
<h2 style="color: #161616;">Creating a project</h2>
<p style="color: #404853;">Any new development in IntelliJ IDEA starts with creating a project. So let's create one now.</p>

<ol class="list _decimal" style="color: #404853;">
 	<li class="list__item">If no project is currently open in IntelliJ IDEA, click <span class="control" style="font-weight: 600;">Create New Project</span> on the Welcome screen. Otherwise, select <span class="control" style="font-weight: 600;">File | New | Project</span>.As a result, the <span class="control" style="font-weight: 600;">New Project</span> wizard opens.</li>
 	<li class="list__item">In the left-hand pane, select <span class="control" style="font-weight: 600;">Java</span>. (We want a Java-enabled project to be created, or, to be more exact, a project with a Java module.)
<figure><img title="HWJ000NewProjectJava" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ000NewProjectJava.png" alt="HWJ000NewProjectJava" width="580" height="162" /></figure>
</li>
 	<li class="list__item">If you haven't defined a JDK in IntelliJ IDEA yet (in such a case <span class="control" style="font-weight: 600;">&lt;None&gt;</span> is shown the <span class="control" style="font-weight: 600;">Project SDK</span> field), you should do it now.Click <span class="control" style="font-weight: 600;">New</span> and select <span class="control" style="font-weight: 600;">JDK</span>.
<figure><img title="HWJ002NewProjectNewJDK" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ002NewProjectNewJDK.png" alt="HWJ002NewProjectNewJDK" width="580" height="210" /></figure>
In the <span class="control" style="font-weight: 600;">Select Home Directory for JDK</span> dialog that opens, select the directory in which you have the desired JDK installed.
<figure><img title="HWJ003SelectHomeDirForJDK" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ003SelectHomeDirForJDK.png" alt="HWJ003SelectHomeDirForJDK" width="440" height="321" /></figure>
The JDK you have specified is shown in the <span class="control" style="font-weight: 600;">Project SDK</span> field. This JDK will be associated by default with all projects and Java modules that you will create later.
<figure><img title="HWJ004NewProjectJDKSet" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ004NewProjectJDKSet.png" alt="HWJ004NewProjectJDKSet" width="580" height="162" /></figure>
Because our application is going to be a "plain old Java application", we don't need any "additional" technologies to be supported. So, <strong>don't</strong> select any of the options under <span class="control" style="font-weight: 600;">Additional Libraries and Frameworks</span>.

Click <span class="control" style="font-weight: 600;">Next</span>.</li>
 	<li class="list__item">The options on the next page have to do with creating a Java class with a <code class="code" data-lang="Java">main()</code> method.Since we are going to study the very basics of IntelliJ IDEA, and do everything "from scratch", we don't need these options at the moment. In other circumstances, they may, of course, be very useful.So, don't select any of the options.
<figure><img title="HWJ001NewProjectFromTemplate" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ001NewProjectFromTemplate.png" alt="HWJ001NewProjectFromTemplate" width="580" height="141" /></figure>
Click <span class="control" style="font-weight: 600;">Next</span>.</li>
 	<li class="list__item">On the next page, specify the project name (e.g. <code class="code" data-lang="Java">HelloWorld</code>). If necessary, change the project location suggested by IntelliJ IDEA.
<figure><img title="HWJ002NewProjectJavaModuleProjectName" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ002NewProjectJavaModuleProjectName.png" alt="HWJ002NewProjectJavaModuleProjectName" width="580" height="141" /></figure>
Click <span class="control" style="font-weight: 600;">Finish</span>.

Wait while IntelliJ IDEA is creating the project. When this process is complete, the structure of your new project is shown in the <span class="control" style="font-weight: 600;">Project</span> tool window.</li>
</ol>
&nbsp;
<h2 style="color: #161616;">Exploring the project structure</h2>
&nbsp;
<p style="color: #404853;">Let's take a quick look at the project structure.</p>

<figure style="color: #404853;"><img title="HWJ006ProjectToolWindowInitialState" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ006ProjectToolWindowInitialState.png" alt="HWJ006ProjectToolWindowInitialState" width="401" height="171" /></figure>
&nbsp;
<p style="color: #404853;">There are two top-level nodes:</p>

<ul class="list _ul" style="color: #404853;">
 	<li class="list__item"><span class="control" style="font-weight: 600;">HelloWorld.</span> This node represents your Java module. The <code class="code" data-lang="Java">.idea</code> folder and the file <code class="code" data-lang="Java">HelloWorld.iml</code> are used to store configuration data for your project and module respectively. The folder <code class="code" data-lang="Java">src</code> is for your source code.</li>
 	<li class="list__item"><span class="control" style="font-weight: 600;">External Libraries.</span> This is a category that represents all the "external" resources necessary for your development work. Currently in this category are the <code class="code" data-lang="Java">.jar</code> files that make up your JDK.</li>
</ul>
&nbsp;
<h2 style="color: #161616;">Creating a package and a class</h2>
<p style="color: #404853;">Now we are going to create a package and a class. Let the package and the class names be <code class="code" data-lang="Java">com.example.helloworld</code> and <code class="code" data-lang="Java">HelloWorld</code> respectively.</p>
&nbsp;
<p style="color: #404853;">Though a package can be created separately, we will create both the package and the class at once.</p>

<ol class="list _decimal" style="color: #404853;">
 	<li class="list__item">In the <span class="control" style="font-weight: 600;">Project</span> tool window, select the <code class="code" data-lang="Java">src</code> folder and press <kbd data-default="Alt+Insert" data-default_for_gnome="Alt+Insert" data-default_for_kde="Alt+Insert" data-default_for_xwin="Alt+Insert" data-emacs="Alt+Insert" data-jbuilder="Alt+Insert" data-visual_studio="Alt+Insert" data-netbeans_6="" data-eclipse="Alt+Insert" data-mac_os_x_10="" data-mac_os_x="⌃N" data-eclipse_mac_os_x="⌘N" data-intellij_idea_classic_os_x="N/A" data-xcode="N/A" data-resharper="N/A" data-resharper_osx="N/A">Alt+Insert</kbd>. (Alternatively, you can select <span class="control" style="font-weight: 600;">File | New</span>, or <span class="control" style="font-weight: 600;">New</span> from the context menu for the folder <code class="code" data-lang="Java">src</code>.)</li>
 	<li class="list__item">In the <span class="control" style="font-weight: 600;">New</span> menu, select <span class="control" style="font-weight: 600;">Java Class</span> (e.g. by pressing <kbd data-default="Enter" data-default_for_gnome="Enter" data-default_for_kde="Enter" data-default_for_xwin="Enter" data-emacs="Enter" data-jbuilder="Enter" data-visual_studio="Enter" data-netbeans_6="" data-eclipse="Enter" data-mac_os_x_10="" data-mac_os_x="⏎" data-eclipse_mac_os_x="⏎" data-intellij_idea_classic_os_x="N/A" data-xcode="N/A" data-resharper="N/A" data-resharper_osx="N/A">Enter</kbd>).
<figure><img title="HWJ010ProjectToolWindowNewClass" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ010ProjectToolWindowNewClass.png" alt="HWJ010ProjectToolWindowNewClass" width="401" height="226" /></figure>
</li>
 	<li class="list__item">In the <span class="control" style="font-weight: 600;">Create New Class</span> dialog that opens, type <code class="code" data-lang="Java">com.example.helloworld.HelloWorld</code> in the <span class="control" style="font-weight: 600;">Name</span> field. The <span class="control" style="font-weight: 600;">Class</span> option selected in the <span class="control" style="font-weight: 600;">Kind</span> list is OK for creating a class. Press <kbd data-default="Enter" data-default_for_gnome="Enter" data-default_for_kde="Enter" data-default_for_xwin="Enter" data-emacs="Enter" data-jbuilder="Enter" data-visual_studio="Enter" data-netbeans_6="" data-eclipse="Enter" data-mac_os_x_10="" data-mac_os_x="⏎" data-eclipse_mac_os_x="⏎" data-intellij_idea_classic_os_x="N/A" data-xcode="N/A" data-resharper="N/A" data-resharper_osx="N/A">Enter</kbd> to create the package and the class, and close the dialog.
<figure><img title="HWJ011CreateNewClassName" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ011CreateNewClassName.png" alt="HWJ011CreateNewClassName" width="361" height="157" /></figure>
The package <code class="code" data-lang="Java">com.example.helloworld</code> and the class <code class="code" data-lang="Java">HelloWorld</code> are shown in the <span class="control" style="font-weight: 600;">Project</span> tool window.
<figure><img title="HWJ011NewClassInProjectToolWindow" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ011NewClassInProjectToolWindow.png" alt="HWJ011NewClassInProjectToolWindow" width="401" height="226" /></figure>
At the same time, the file <code class="code" data-lang="Java">HelloWorld.java</code> (corresponding to the class) opens in the editor.
<figure><img title="HWJ012NewClassInEditor" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ012NewClassInEditor.png" alt="HWJ012NewClassInEditor" width="580" height="172" /></figure>
</li>
</ol>
&nbsp;
<p style="color: #404853;">Note the package statement at the beginning of the file and also the class declaration. When creating the class, IntelliJ IDEA used a file template for a Java class.</p>
<p style="color: #404853;">Also note a yellow light bulb <img class="inline-icon-15" title="intentionBulb" src="https://www.jetbrains.com/help/img/idea/2016.2/intentionBulb.png" alt="intentionBulb" width="10" height="15" />. This bulb indicates that IntelliJ IDEA has suggestions for the current context. Click the light bulb, or press <kbd data-default="Alt+Enter" data-default_for_gnome="Alt+Enter" data-default_for_kde="Alt+Enter" data-default_for_xwin="Alt+Enter" data-emacs="Alt+Enter" data-jbuilder="Alt+Enter" data-visual_studio="Alt+Enter" data-netbeans_6="" data-eclipse="Alt+Enter" data-mac_os_x_10="" data-mac_os_x="⌥⏎" data-eclipse_mac_os_x="⌘1" data-intellij_idea_classic_os_x="N/A" data-xcode="N/A" data-resharper="N/A" data-resharper_osx="N/A">Alt+Enter</kbd> to see the suggestion list.</p>

<figure style="color: #404853;"><img title="HWJ013IntentionActionsSuggestionList" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ013IntentionActionsSuggestionList.png" alt="HWJ013IntentionActionsSuggestionList" width="580" height="253" /></figure>
&nbsp;
<p style="color: #404853;">At the moment, we are not going to perform any of the actions suggested by IntelliJ IDEA (such actions are called intention actions.) Note, however, that this IntelliJ IDEA feature may sometimes be very useful.</p>
<p style="color: #404853;">Finally, there are code folding markers next to the commented code block (<img class="inline-icon-11" title="foldingMinus" src="https://www.jetbrains.com/help/img/idea/2016.2/foldingMinus.gif" alt="foldingMinus" width="20" height="11" />). Click one of them to collapse the corresponding block.</p>

<figure style="color: #404853;"><img title="HWJ014CommentedCodeFolded" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ014CommentedCodeFolded.png" alt="HWJ014CommentedCodeFolded" width="580" height="137" /></figure>
&nbsp;
<h2 style="color: #161616;">Writing code for the HelloWorld class</h2>
<p style="color: #404853;">The code in its final state (as you probably know) will look this way:</p>
&nbsp;
<div class="code-block" data-lang="Java">
<pre>package com.example.helloworld;
<span style="font-weight: bold; color: #008800;">public</span> <span style="font-weight: bold; color: #008800;">class</span> <span style="font-weight: bold; color: #bb0066;">HelloWorld</span> {
 <span style="font-weight: bold; color: #008800;">public</span> <span style="font-weight: bold; color: #008800;">static</span> <span style="font-weight: bold; color: #008800;">void</span> <span style="font-weight: bold; color: #0066bb;">main</span>(String[] args) {
  System.<span style="font-weight: bold; color: #008800;">out</span>.println("Hello, World!");
 }
}</pre>
</div>
<p style="color: #404853;">The package statement and the class declaration are already there. Now we are going to add the missing couple of lines.</p>
&nbsp;
<p style="color: #404853;">Press <kbd data-default="Shift+Enter" data-default_for_gnome="Shift+Enter" data-default_for_kde="Shift+Enter" data-default_for_xwin="Shift+Enter" data-emacs="Shift+Enter" data-jbuilder="Shift+Enter" data-visual_studio="Shift+Enter" data-netbeans_6="" data-eclipse="Shift+Enter" data-mac_os_x_10="" data-mac_os_x="⇧⏎" data-eclipse_mac_os_x="⇧⏎" data-intellij_idea_classic_os_x="N/A" data-xcode="N/A" data-resharper="N/A" data-resharper_osx="N/A">Shift+Enter</kbd>. (In contrast to <kbd data-default="Enter" data-default_for_gnome="Enter" data-default_for_kde="Enter" data-default_for_xwin="Enter" data-emacs="Enter" data-jbuilder="Enter" data-visual_studio="Enter" data-netbeans_6="" data-eclipse="Enter" data-mac_os_x_10="" data-mac_os_x="⏎" data-eclipse_mac_os_x="⏎" data-intellij_idea_classic_os_x="N/A" data-xcode="N/A" data-resharper="N/A" data-resharper_osx="N/A">Enter</kbd>, <kbd data-default="Shift+Enter" data-default_for_gnome="Shift+Enter" data-default_for_kde="Shift+Enter" data-default_for_xwin="Shift+Enter" data-emacs="Shift+Enter" data-jbuilder="Shift+Enter" data-visual_studio="Shift+Enter" data-netbeans_6="" data-eclipse="Shift+Enter" data-mac_os_x_10="" data-mac_os_x="⇧⏎" data-eclipse_mac_os_x="⇧⏎" data-intellij_idea_classic_os_x="N/A" data-xcode="N/A" data-resharper="N/A" data-resharper_osx="N/A">Shift+Enter</kbd> starts a new line without breaking the current one.)</p>

<figure style="color: #404853;"><img title="HWJ015NewLine" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ015NewLine.png" alt="HWJ015NewLine" width="580" height="156" /></figure>
&nbsp;
<h2 style="font-weight: 400;"><strong>Using a live template for the main() method</strong></h2>
&nbsp;
<p style="color: #404853;">The line</p>

<div class="code-block" data-lang="Java">
<pre><span style="font-weight: bold; color: #008800;">public</span> <span style="font-weight: bold; color: #008800;">static</span> <span style="font-weight: bold; color: #008800;">void</span> <span style="font-weight: bold; color: #0066bb;">main</span>(String[] args) {}
</pre>
</div>
<p style="color: #404853;">may well be typed. However, we suggest that you use a different method. Type <code class="code" data-lang="Java">p</code> and press <kbd data-default="Ctrl+J" data-default_for_gnome="Ctrl+J" data-default_for_kde="Ctrl+J" data-default_for_xwin="Ctrl+J" data-emacs="Ctrl+J" data-jbuilder="Ctrl+J" data-visual_studio="Ctrl+J" data-netbeans_6="" data-eclipse="Ctrl+Shift+Alt+J" data-mac_os_x_10="" data-mac_os_x="⌘J" data-eclipse_mac_os_x="N/A" data-intellij_idea_classic_os_x="N/A" data-xcode="N/A" data-resharper="N/A" data-resharper_osx="N/A">Ctrl+J</kbd>.</p>

<figure style="color: #404853;"><img title="HWJ016psvm" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ016psvm.png" alt="HWJ016psvm" width="580" height="191" /></figure>
<p style="color: #404853;">Select <span class="control" style="font-weight: 600;">psvm - main() method declaration</span>. (Use the <kbd data-default="Up" data-default_for_gnome="Up" data-default_for_kde="Up" data-default_for_xwin="Up" data-emacs="Up" data-jbuilder="Up" data-visual_studio="Up" data-netbeans_6="" data-eclipse="Up" data-mac_os_x_10="" data-mac_os_x="↑" data-eclipse_mac_os_x="↑" data-intellij_idea_classic_os_x="N/A" data-xcode="N/A" data-resharper="N/A" data-resharper_osx="N/A">Up</kbd> and <kbd data-default="Down" data-default_for_gnome="Down" data-default_for_kde="Down" data-default_for_xwin="Down" data-emacs="Down" data-jbuilder="Down" data-visual_studio="Down" data-netbeans_6="" data-eclipse="Down" data-mac_os_x_10="" data-mac_os_x="↓" data-eclipse_mac_os_x="↓" data-intellij_idea_classic_os_x="N/A" data-xcode="N/A" data-resharper="N/A" data-resharper_osx="N/A">Down</kbd> arrow keys for moving within the suggestion list, <kbd data-default="Enter" data-default_for_gnome="Enter" data-default_for_kde="Enter" data-default_for_xwin="Enter" data-emacs="Enter" data-jbuilder="Enter" data-visual_studio="Enter" data-netbeans_6="" data-eclipse="Enter" data-mac_os_x_10="" data-mac_os_x="⏎" data-eclipse_mac_os_x="⏎" data-intellij_idea_classic_os_x="N/A" data-xcode="N/A" data-resharper="N/A" data-resharper_osx="N/A">Enter</kbd> for selecting a highlighted element.)</p>
<p style="color: #404853;">Here is the result:</p>

<figure style="color: #404853;"><img title="HWJ017MainMethodInserted" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ017MainMethodInserted.png" alt="HWJ017MainMethodInserted" width="580" height="186" /></figure>
<h3 style="font-weight: 400;"><strong>Using code auto-completion</strong></h3>
<p style="color: #404853;">Now, it's time to add the remaining line of code</p>

<div class="code-block" data-lang="Java"><code id="copy-area-2" class="code-block__wrapper"><span class="n">System</span><span class="o">.</span><span class="na" style="color: #0000ff;">out</span><span class="o">.</span><span class="na" style="color: #0000ff;">println</span><span class="o">(</span><span class="s" style="color: #009c00;">"Hello, World!"</span><span class="o">);</span></code></div>
<p style="color: #404853;">We'll do that using code auto-completion.</p>
<p style="color: #404853;">Type <code class="code" data-lang="Java">Sy</code></p>
<p style="color: #404853;">The code completion suggestion list is shown.</p>

<figure style="color: #404853;"><img title="HWJ018InsertSystem" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ018InsertSystem.png" alt="HWJ018InsertSystem" width="580" height="191" /></figure>
<p style="color: #404853;">Select <span class="control" style="font-weight: 600;">System (java.lang)</span> by pressing <kbd data-default="Enter" data-default_for_gnome="Enter" data-default_for_kde="Enter" data-default_for_xwin="Enter" data-emacs="Enter" data-jbuilder="Enter" data-visual_studio="Enter" data-netbeans_6="" data-eclipse="Enter" data-mac_os_x_10="" data-mac_os_x="⏎" data-eclipse_mac_os_x="⏎" data-intellij_idea_classic_os_x="N/A" data-xcode="N/A" data-resharper="N/A" data-resharper_osx="N/A">Enter</kbd>.</p>
<p style="color: #404853;">Type <code class="code" data-lang="Java">.o</code> and press <kbd data-default="Ctrl+Period" data-default_for_gnome="Ctrl+Period" data-default_for_kde="Ctrl+Period" data-default_for_xwin="Ctrl+Period" data-emacs="Ctrl+Period" data-jbuilder="Ctrl+Period" data-visual_studio="Ctrl+Period" data-netbeans_6="" data-eclipse="Ctrl+Period" data-mac_os_x_10="" data-mac_os_x="⌃." data-eclipse_mac_os_x="⌃." data-intellij_idea_classic_os_x="N/A" data-xcode="N/A" data-resharper="N/A" data-resharper_osx="N/A">Ctrl+Period</kbd>.</p>

<figure style="color: #404853;"><img title="HWJ020InsertOut" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ020InsertOut.png" alt="HWJ020InsertOut" width="580" height="191" /></figure>
<p style="color: #404853;"><code class="code" data-lang="Java">out</code> is inserted followed by a dot. (You can select an item in the suggestion list by pressing <kbd data-default="Ctrl+Period" data-default_for_gnome="Ctrl+Period" data-default_for_kde="Ctrl+Period" data-default_for_xwin="Ctrl+Period" data-emacs="Ctrl+Period" data-jbuilder="Ctrl+Period" data-visual_studio="Ctrl+Period" data-netbeans_6="" data-eclipse="Ctrl+Period" data-mac_os_x_10="" data-mac_os_x="⌃." data-eclipse_mac_os_x="⌃." data-intellij_idea_classic_os_x="N/A" data-xcode="N/A" data-resharper="N/A" data-resharper_osx="N/A">Ctrl+Period</kbd>. In that case, the selected item is inserted into the editor followed by a dot.)</p>
<p style="color: #404853;">Type <code class="code" data-lang="Java">p</code> and then find and select <span class="control" style="font-weight: 600;">println(String x)</span>.</p>

<figure style="color: #404853;"><img title="HWJ022InsertPrintLn" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ022InsertPrintLn.png" alt="HWJ022InsertPrintLn" width="580" height="226" /></figure>
<p style="color: #404853;">IntelliJ IDEA prompts you which parameter types can be used in the current context.</p>

<figure style="color: #404853;"><img title="HWJ023PrintLnInserted" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ023PrintLnInserted.png" alt="HWJ023PrintLnInserted" width="580" height="340" /></figure>
<p style="color: #404853;">Type <code class="code" data-lang="Java">"</code></p>
<p style="color: #404853;">The second quotation mark is inserted automatically and the cursor is placed between the quotation marks. Type <code class="code" data-lang="Java">Hello, World!</code></p>

<figure style="color: #404853;"><img title="HWJ024CodeReady" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ024CodeReady.png" alt="HWJ024CodeReady" width="580" height="191" /></figure>
<p style="color: #404853;">The code at this step is ready.</p>
&nbsp;
<h3 style="font-weight: 400;"><strong>Using a live template for println()</strong></h3>
&nbsp;
<p style="color: #404853;">As a side note, we could have inserted the call to <code class="code" data-lang="Java">println()</code> by using a live template (<code class="code" data-lang="Java">sout</code>).</p>
<p style="color: #404853;">If you think that it's enough for live templates, proceed to <a style="color: #bb68b2;" href="https://www.jetbrains.com/help/idea/2016.2/tutorial-creating-running-and-packaging-your-first-java-application.html#run_app">running the application</a>. Otherwise, try that now as an additional exercise. Delete</p>

<div class="code-block" data-lang="Java"><code id="copy-area-3" class="code-block__wrapper"><span class="n">System</span><span class="o">.</span><span class="na" style="color: #0000ff;">out</span><span class="o">.</span><span class="na" style="color: #0000ff;">println</span><span class="o">(</span><span class="s" style="color: #009c00;">"Hello, World!"</span><span class="o">);</span></code></div>
<div class="code-block" data-lang="Java"></div>
<p style="color: #404853;">Type <code class="code" data-lang="Java">s</code>, press <kbd data-default="Ctrl+J" data-default_for_gnome="Ctrl+J" data-default_for_kde="Ctrl+J" data-default_for_xwin="Ctrl+J" data-emacs="Ctrl+J" data-jbuilder="Ctrl+J" data-visual_studio="Ctrl+J" data-netbeans_6="" data-eclipse="Ctrl+Shift+Alt+J" data-mac_os_x_10="" data-mac_os_x="⌘J" data-eclipse_mac_os_x="N/A" data-intellij_idea_classic_os_x="N/A" data-xcode="N/A" data-resharper="N/A" data-resharper_osx="N/A">Ctrl+J</kbd> and select <span class="control" style="font-weight: 600;">sout - Prints a string to System.out</span>.</p>
&nbsp;
<p style="color: #404853;">The line</p>

<div class="code-block" data-lang="Java"><code id="copy-area-4" class="code-block__wrapper"><span class="n">System</span><span class="o">.</span><span class="na" style="color: #0000ff;">out</span><span class="o">.</span><span class="na" style="color: #0000ff;">println</span><span class="o">();</span></code></div>
<div class="code-block" data-lang="Java"></div>
<p style="color: #404853;">is added and the cursor is placed between <code class="code" data-lang="Java">(</code> and <code class="code" data-lang="Java">)</code>.</p>
<p style="color: #404853;">Type <code class="code" data-lang="Java">"</code> and then type <code class="code" data-lang="Java">Hello, World!</code></p>
&nbsp;
<h2 style="color: #161616;">Building and running the application</h2>
<p style="color: #404853;">Classes with a <code class="code" data-lang="Java">main()</code> method can be run right from the editor. To show that, there are the green arrow markers (<img class="inline-icon-14" title="run" src="https://www.jetbrains.com/help/img/idea/2016.2/run.png" alt="run" width="11" height="14" />) in the left margin.</p>
<p style="color: #404853;">Click one of the markers and select <span class="control" style="font-weight: 600;">Run 'HelloWorld.main()'</span>.</p>

<figure style="color: #404853;"><img title="HWJ028RunHelloWorld" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ028RunHelloWorld.png" alt="HWJ028RunHelloWorld" width="580" height="191" /></figure>
<p style="color: #404853;">Wait while IntelliJ IDEA is compiling the class. When the compilation is complete, the <span class="control" style="font-weight: 600;">Run</span> tool window opens at the bottom of the screen.</p>

<figure style="color: #404853;"><img title="HWJ029RunToolWindow" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ029RunToolWindow.png" alt="HWJ029RunToolWindow" width="580" height="131" /></figure>
<p style="color: #404853;">On the first line, there is a fragment of the command that IntelliJ IDEA used to run the class. (Click the fragment to see the whole command line including all options and arguments.) The last line shows that the process has exited normally, and no infinite loops occurred. And, finally, you see the program output <code class="code" data-lang="Java">Hello, World!</code> between these lines.</p>
&nbsp;
<h2 style="color: #161616;">Hints: building and running applications</h2>
<p style="color: #404853;">Some hints related to building and running applications in IntelliJ IDEA:</p>

<ul class="list _ul" style="color: #404853;">
 	<li class="list__item">Prior to running the class, IntelliJ IDEA has automatically compiled it. When necessary, you can initiate the compilation yourself. The corresponding options can be found in the <span class="control" style="font-weight: 600;">Build</span> menu.
<figure><img title="HWJ025BuildMenu" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ025BuildMenu.png" alt="HWJ025BuildMenu" width="293" height="187" /></figure>
Many of these options are also available as context menu commands in the <span class="control" style="font-weight: 600;">Project</span> tool window and in the editor.

Finally, there is an icon in the upper-right part of the workspace that corresponds to the <span class="control" style="font-weight: 600;">Make Project</span> command (<img class="inline-icon-14" title="build" src="https://www.jetbrains.com/help/img/idea/2016.2/build.png" alt="build" width="14" height="14" />).
<figure><img title="HWJ025BuildIcon" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ025BuildIcon.png" alt="HWJ025BuildIcon" width="306" height="103" /></figure>
</li>
 	<li class="list__item">The options for running and debugging applications can be found in the <span class="control" style="font-weight: 600;">Run</span> menu.
<figure><img title="HWJ030RunMenu" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ030RunMenu.png" alt="HWJ030RunMenu" width="349" height="214" /></figure>
As in the case of the build operations, the run options can also be accessed from the <span class="control" style="font-weight: 600;">Project</span> tool window and the editor, as well as by means of controls in the upper-right part of the workspace.
<figure><img title="HWJ031RunToolbarButtons" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ031RunToolbarButtons.png" alt="HWJ031RunToolbarButtons" width="197" height="19" /></figure>
</li>
 	<li class="list__item">Applications in IntelliJ IDEA are run according to what is called run/debug configurations. Such configurations, generally, should be created prior to running an application.When you performed the <span class="control" style="font-weight: 600;">Run 'HelloWorld.main()'</span> command, IntelliJ IDEA, first, created a run configuration and then executed it.The name of this run configuration (HelloWorld) is now shown in the run/debug configuration selector to the left of <img class="inline-icon-14" title="run" src="https://www.jetbrains.com/help/img/idea/2016.2/run.png" alt="run" width="11" height="14" />.The HelloWorld configuration now exists as a temporary configuration and, if necessary, you can save it to make it permanent.
<figure><img title="HWJ032RunConfigSelectorMenu" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ032RunConfigSelectorMenu.png" alt="HWJ032RunConfigSelectorMenu" width="225" height="100" /></figure>
</li>
 	<li class="list__item">Run/debug configurations can do a lot more than just run applications. They can also build applications and perform other useful tasks.If you look at the settings for the HelloWorld run configuration (<span class="control" style="font-weight: 600;">Run | Edit Configurations</span> or <span class="control" style="font-weight: 600;">Edit Configurations</span> from the run configuration selector), you'll see that the <span class="control" style="font-weight: 600;">Make</span> option is included by default in the <span class="control" style="font-weight: 600;">Before launch</span> task list. That's why IntelliJ IDEA compiled the class when you performed the <span class="control" style="font-weight: 600;">Run 'HelloWorld.main()'</span> command.
<figure><img title="HWJ033RunConfigSettings" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ033RunConfigSettings.png" alt="HWJ033RunConfigSettings" width="580" height="199" /></figure>
</li>
 	<li class="list__item">If you look at the <span class="control" style="font-weight: 600;">Project</span> tool window, you'll see that now there is the folder <code class="code" data-lang="Java">out</code> there. This is the project output folder.Inside it is the module output folder (<code class="code" data-lang="Java">production\HelloWorld</code>), the folder structure for the package <code class="code" data-lang="Java">com.example.helloworld</code> and the compiled class file <code class="code" data-lang="Java">HelloWorld.class</code>.
<figure><img title="HWJ027HelloWorldInExplorer" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ027HelloWorldInExplorer.png" alt="HWJ027HelloWorldInExplorer" width="401" height="269" /></figure>
</li>
</ul>
&nbsp;
<h2 style="color: #161616;">Packaging the application in a JAR</h2>
<p style="color: #404853;">When happy with your application, you may want to package it in a Java archive (<a style="color: #bb68b2;" href="https://en.wikipedia.org/wiki/JAR_(file_format)" data-bypass="yes">JAR</a>) for distribution. To do that, you should create an artifact configuration for your JAR and then build the artifact.</p>

<h3 style="font-weight: 400;">Creating an artifact configuration for the JAR</h3>
<ol class="list _decimal" style="color: #404853;">
 	<li class="list__item">Select <span class="control" style="font-weight: 600;">File | Project Structure</span> to open the <span class="control" style="font-weight: 600;">Project Structure</span> dialog.</li>
 	<li class="list__item">Under <span class="control" style="font-weight: 600;">Project Settings</span>, select <span class="control" style="font-weight: 600;">Artifacts</span>.</li>
 	<li class="list__item">Click <img class="inline-icon-12" title="add" src="https://www.jetbrains.com/help/img/idea/2016.2/new.png" alt="add" width="12" height="12" />, point to <span class="control" style="font-weight: 600;">JAR</span> and select <span class="control" style="font-weight: 600;">From modules with dependencies</span>.
<figure><img title="HWJ041NewArtifact" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ041NewArtifact.png" alt="HWJ041NewArtifact" width="580" height="252" /></figure>
</li>
 	<li class="list__item">In the dialog that opens, specify the main application class. (To the right of the <span class="control" style="font-weight: 600;">Main Class</span> field, click <img class="inline-icon-15" title="browseButton" src="https://www.jetbrains.com/help/img/idea/2016.2/browseButton.png" alt="browseButton" width="15" height="15" /> and select <span class="control" style="font-weight: 600;">HelloWorld (com.example.helloworld)</span> in the dialog that opens.)As a result, the artifact configuration is created and its settings are shown in the right-hand part of the <span class="control" style="font-weight: 600;">Project Structure</span> dialog.
<figure><img title="HWJ042ArtifactSettings" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ042ArtifactSettings.png" alt="HWJ042ArtifactSettings" width="580" height="399" /></figure>
</li>
 	<li class="list__item">Click <span class="control" style="font-weight: 600;">OK</span>.</li>
</ol>
&nbsp;
<h3 style="font-weight: 400;"><strong>Building the JAR artifact</strong></h3>
<ol class="list _decimal" style="color: #404853;">
 	<li class="list__item">Select <span class="control" style="font-weight: 600;">Build | Build Artifacts</span>.
<figure><img title="HWJ043BuildArtifacts" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ043BuildArtifacts.png" alt="HWJ043BuildArtifacts" width="293" height="187" /></figure>
</li>
 	<li class="list__item">Point to <span class="control" style="font-weight: 600;">HelloWorld:jar</span> and select <span class="control" style="font-weight: 600;">Build</span>. (In this particular case, <span class="control" style="font-weight: 600;">Build</span> is the default action, so you can just press <kbd data-default="Enter" data-default_for_gnome="Enter" data-default_for_kde="Enter" data-default_for_xwin="Enter" data-emacs="Enter" data-jbuilder="Enter" data-visual_studio="Enter" data-netbeans_6="" data-eclipse="Enter" data-mac_os_x_10="" data-mac_os_x="⏎" data-eclipse_mac_os_x="⏎" data-intellij_idea_classic_os_x="N/A" data-xcode="N/A" data-resharper="N/A" data-resharper_osx="N/A">Enter</kbd> instead.)
<figure><img title="HWJ044ArtifactBuild" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ044ArtifactBuild.png" alt="HWJ044ArtifactBuild" width="217" height="137" /></figure>
If you now look at the <code class="code" data-lang="Java">out/artifacts</code> folder, you'll find your JAR there.
<figure><img title="HWJ045ArtifactLocation" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ045ArtifactLocation.png" alt="HWJ045ArtifactLocation" width="347" height="333" /></figure>
</li>
</ol>
&nbsp;
<h2 style="color: #161616;">Running the packaged application</h2>
<p style="color: #404853;">To make sure that everything is fine with the JAR, let's run it. To do that, we'll create a JAR Application run configuration and then execute that run configuration.</p>

<h3 style="font-weight: 400;"><strong>Creating a JAR Application run configuration</strong></h3>
<p style="color: #404853;">To run Java applications packaged in JARs, IntelliJ IDEA provides the JAR Application run configurations. To create such a configuration:</p>

<ol class="list _decimal" style="color: #404853;">
 	<li class="list__item">Select <span class="control" style="font-weight: 600;">Run | Edit Configurations</span>.</li>
 	<li class="list__item">In the <span class="control" style="font-weight: 600;">Run/Debug Configurations</span> dialog that opens, click <img class="inline-icon-12" title="add" src="https://www.jetbrains.com/help/img/idea/2016.2/new.png" alt="add" width="12" height="12" /> and select <span class="control" style="font-weight: 600;">JAR Application</span>.
<figure><img title="HWJ046NewJarAppRunConfig" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ046NewJarAppRunConfig.png" alt="HWJ046NewJarAppRunConfig" width="580" height="395" /></figure>
</li>
 	<li class="list__item">Specify the path to the JAR file. (To the right of the <span class="control" style="font-weight: 600;">Path to JAR</span> field, click <img class="inline-icon-15" title="browseButton" src="https://www.jetbrains.com/help/img/idea/2016.2/browseButton.png" alt="browseButton" width="15" height="15" /> and select the JAR file in the dialog that opens.)The rest of the settings in this case don't matter, however, there's one more thing that we'll do - just for convenience.</li>
 	<li class="list__item">Under <span class="control" style="font-weight: 600;">Before launch</span>, click <img class="inline-icon-12" title="add" src="https://www.jetbrains.com/help/img/idea/2016.2/new.png" alt="add" width="12" height="12" />, select <span class="control" style="font-weight: 600;">Build Artifacts</span> and select the <span class="control" style="font-weight: 600;">HelloWorld:jar</span> artifact in the dialog that opens.The <span class="control" style="font-weight: 600;">Build 'HelloWorld:jar' artifact</span> task is included in the <span class="control" style="font-weight: 600;">Before launch</span> task list. So each time you execute this run configuration, the artifact will be built automatically.
<figure><img title="HWJ047JarAppRunConfigSettings" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ047JarAppRunConfigSettings.png" alt="HWJ047JarAppRunConfigSettings" width="580" height="515" /></figure>
</li>
</ol>
&nbsp;
<h3 style="font-weight: 400;"><strong>Executing the run configuration</strong></h3>
<ul class="list _ul" style="color: #404853;">
 	<li class="list__item">To the right of the run configuration selector, click <img class="inline-icon-14" title="run" src="https://www.jetbrains.com/help/img/idea/2016.2/run.png" alt="run" width="11" height="14" />.
<figure><img title="HWJ048RunJarApp" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ048RunJarApp.png" alt="HWJ048RunJarApp" width="317" height="103" /></figure>
As before, the <span class="control" style="font-weight: 600;">Run</span> tool window opens and the application output is shown there.
<figure><img title="HWJ049JarAppOutput" src="https://www.jetbrains.com/help/img/idea/2016.2/HWJ049JarAppOutput.png" alt="HWJ049JarAppOutput" width="580" height="131" /></figure>
</li>
</ul>
&nbsp;
<h1 style="color: #161616;">Getting Started with Maven</h1>
IntelliJ IDEA lets you work with Maven by importing a project that contains <code class="code" data-lang="Java">pom.xml</code> or by creating a Maven project from scratch.
<h2 style="color: #161616;">Creating Maven Project</h2>
<ol class="list _decimal">
 	<li class="list__item">Open Project Wizard, in the left-hand pane select <span class="control" style="font-weight: 600;">Maven</span>.</li>
 	<li class="list__item">In the right-hand pane, specify the following options:
<ul class="list _bullet">
 	<li class="list__item"><span class="control" style="font-weight: 600;">Project SDK</span> - specify your project <a style="color: #bb68b2;" href="https://www.jetbrains.com/help/idea/2016.1/sdk.html">SDK</a>(JDK).
If the necessary JDK is already defined in IntelliJ IDEA, select it from the list. Otherwise, click <span class="control" style="font-weight: 600;">New</span> and select the installation folder of the desired JDK.</li>
 	<li class="list__item">If you want to create a Maven project based on one of the Maven Archetypes, select the <span class="control" style="font-weight: 600;">Create from archetype</span> check box, and select the desired archetype from the list.
You can click <span class="control" style="font-weight: 600;">Add Archetype</span> and add a new archetype to the list of the existing ones.</li>
</ul>
Click <span class="control" style="font-weight: 600;">Next</span>.
<figure><img title="creat_maven_project" src="https://www.jetbrains.com/help/img/idea/2016.1/creat_maven_project.png" alt="creat_maven_project" width="751" height="604" /></figure>
</li>
 	<li class="list__item">On the next page of the wizard, specify properties for your Maven project and click <span class="control" style="font-weight: 600;">Next</span>.
<figure><img title="new_maven_proj" src="https://www.jetbrains.com/help/img/idea/2016.1/new_maven_proj.png" alt="new_maven_proj" width="589" height="296" /></figure>
</li>
 	<li class="list__item">On the next page of the wizard, specify project's information and click <span class="control" style="font-weight: 600;">Finish</span>.
<figure><img title="new_maven_proj_page2" src="https://www.jetbrains.com/help/img/idea/2016.1/new_maven_proj_page2.png" alt="new_maven_proj_page2" width="786" height="400" /></figure>
IntelliJ IDEA creates a project with <code class="code" data-lang="Java">pom.xml</code>.</li>
</ol>
<span style="color: #404853;"> </span>
<h2 style="color: #161616;">Importing Project from Existing Maven Project</h2>
IntelliJ IDEA enables you to create a project on the base of an existing Maven project, represented by <code class="code" data-lang="Java">pom.xml</code>.
<ol class="list _decimal">
 	<li class="list__item">If no project is currently open in IntelliJ IDEA, click <span class="control" style="font-weight: 600;">Import Project</span> on the Welcome screen. Otherwise, select <span class="control" style="font-weight: 600;">File | New | Project from Existing Sources</span>.</li>
 	<li class="list__item">In the dialog that opens, select the directory that contains the project to be imported, or a file that contains an appropriate project description. Click <a style="color: #18a3fa;" name="d223147e117"></a><span class="control" style="font-weight: 600;">OK</span>.
<figure><img title="maven_select_dir_for_import" src="https://www.jetbrains.com/help/img/idea/2016.1/maven_select_dir_for_import.png" alt="maven_select_dir_for_import" width="461" height="495" /></figure>
</li>
 	<li class="list__item">On the first page of the <span class="control" style="font-weight: 600;">Import Project</span> wizard, select <span class="control" style="font-weight: 600;">Maven</span>, and click <span class="control" style="font-weight: 600;">Next</span>. (This page is not shown if IntelliJ IDEA has guessed what you are importing.)
<figure><img title="maven_import_model" src="https://www.jetbrains.com/help/img/idea/2016.1/maven_import_model.png" alt="maven_import_model" width="607" height="380" /></figure>
</li>
 	<li class="list__item">On the next page of the wizard, specify the project root directory. Define your import preferences, if they differ from those specified in the Maven Integration dialog. Click Environment settings to configure Maven environment settings.Click <span class="control" style="font-weight: 600;">Next</span>.
<figure><img title="maven_import_rootdir_page" src="https://www.jetbrains.com/help/img/idea/2016.1/maven_import_rootdir_page.png" alt="maven_import_rootdir_page" width="755" height="676" /></figure>
</li>
 	<li class="list__item">On the next page of the wizard, select the desired profiles, and click <span class="control" style="font-weight: 600;">Next</span>.</li>
</ol>
Note that the <span class="control" style="font-weight: 600;">Select profiles</span> page appears if your root directory contains more than one <code class="code" data-lang="Java">pom.xml</code> and the <span class="control" style="font-weight: 600;">Search for projects recursively</span> check box is selected.
<ol class="list _decimal">
 	<li class="list__item">On the next page of the wizard, select the projects to be imported. Note that IntelliJ IDEA detects Maven projects by scanning the specified root. Click <span class="control" style="font-weight: 600;">Next</span>.
<figure><img title="maven_import_select_proj_to_import" src="https://www.jetbrains.com/help/img/idea/2016.1/maven_import_select_proj_to_import.png" alt="maven_import_select_proj_to_import" width="671" height="327" /></figure>
</li>
 	<li class="list__item">On the next page of the wizard, select the project's SDK. Click <span class="control" style="font-weight: 600;">Next</span>.
<figure><img title="maven_import_select_sdk" src="https://www.jetbrains.com/help/img/idea/2016.1/maven_import_select_sdk.png" alt="maven_import_select_sdk" width="755" height="613" /></figure>
</li>
 	<li class="list__item">On the next page of the wizard, specify the new project name and location of the project files. Click <span class="control" style="font-weight: 600;">Finish</span>.
<figure><img title="maven_import_proj_info" src="https://www.jetbrains.com/help/img/idea/2016.1/maven_import_proj_info.png" alt="maven_import_proj_info" width="747" height="360" /></figure>
</li>
</ol>
<span style="color: #404853;"> </span>
<h2 style="color: #161616;">Working with Project Structure</h2>
After importing a Maven project, check its project structure to make sure that the Maven structure was imported as well.
<ol class="list _decimal">
 	<li class="list__item">On the main menu select <span class="menupath" style="font-weight: 600;">File | Project Structure</span>.</li>
 	<li class="list__item">On the page that opens, check that the appropriate libraries and dependencies were downloaded.
<figure><img title="maven_project_structure" src="https://www.jetbrains.com/help/img/idea/2016.1/maven_project_structure.png" alt="maven_project_structure" width="880" height="447" /></figure>
</li>
</ol>
You can download an external maven library to your project using Project Structure dialog.
<ol class="list _decimal">
 	<li class="list__item">Open <span class="control" style="font-weight: 600;">Project Structure</span> page, from the left-hand pane, select <span class="control" style="font-weight: 600;">Libraries</span>, click <img class="inline-icon-12" title="add" src="https://www.jetbrains.com/help/img/idea/2016.1/new.png" alt="add" width="12" height="12" /> icon and from the drop-down list, select <span class="control" style="font-weight: 600;">From Maven</span>.
<figure><img title="maven_new_lib" src="https://www.jetbrains.com/help/img/idea/2016.1/maven_new_lib.png" alt="maven_new_lib" width="807" height="445" /></figure>
The <span class="control" style="font-weight: 600;">Download Library from Maven Repository</span> window opens.
<figure><img title="maven_download_from_repos" src="https://www.jetbrains.com/help/img/idea/2016.1/maven_download_from_repos.png" alt="maven_download_from_repos" width="611" height="242" /></figure>
</li>
 	<li class="list__item">Start typing the name of the library in the search field and select your target from the search results' list.
<figure><img title="maven_download_from_repos2" src="https://www.jetbrains.com/help/img/idea/2016.1/maven_download_from_repos2.png" alt="maven_download_from_repos2" width="610" height="249" /></figure>
</li>
 	<li class="list__item">Select <span class="control" style="font-weight: 600;">Download to</span> check box, enter the location to which you want to download the library and press <span class="control" style="font-weight: 600;">OK</span>. By default, the <span class="control" style="font-weight: 600;">Download to </span>check box is cleared and IntelliJ IDEA downloads the library to the local repository.
<figure><img title="maven_download_to" src="https://www.jetbrains.com/help/img/idea/2016.1/maven_download_to.png" alt="maven_download_to" width="734" height="242" /></figure>
</li>
 	<li class="list__item">In the window that opens, select the module to which you want to add the maven library and press <span class="control" style="font-weight: 600;">OK</span>.
<figure><img title="maven_choose_module_for_lib" src="https://www.jetbrains.com/help/img/idea/2016.1/maven_choose_module_for_lib.png" alt="maven_choose_module_for_lib" width="589" height="264" /></figure>
</li>
 	<li class="list__item">As a result, IntelliJ IDEA adds the library to your dependencies' list. When you open the project, IntelliJ IDEA synchronizes such libraries. It might be helpful if the libraries were deleted from your computer or the project was taken from the VCS and libraries haven't been downloaded yet.
<figure><img title="maven_added_lib_ps" src="https://www.jetbrains.com/help/img/idea/2016.1/maven_added_lib_ps.png" alt="maven_added_lib_ps" width="823" height="455" /></figure>
The library is also added to your project tool window.
<figure><img title="maven_added_lib_pv" src="https://www.jetbrains.com/help/img/idea/2016.1/maven_added_lib_pv.png" alt="maven_added_lib_pv" width="496" height="562" /></figure>
</li>
</ol>
<span style="color: #404853;"> </span>
<h2 style="color: #161616;">Working with POM</h2>
The code assistance is available when you work with POM in the editor. You can generate a new dependency and manage it. You can also add dependency, repository or plugin templates.
<ol class="list _decimal">
 	<li class="list__item">Open your POM file and in the editor and press <span class="keyword" style="font-weight: 600;">Alt + Insert</span>.</li>
 	<li class="list__item">From the list that opens, select an item that you want to generate, for example, a dependency.
<figure><img title="maven_generate" src="https://www.jetbrains.com/help/img/idea/2016.1/maven_generate.png" alt="maven_generate" width="143" height="206" /></figure>
</li>
 	<li class="list__item">In the window that opens search for the artifact that you want to add and click <span class="control" style="font-weight: 600;">Add</span>. If you don't remember the full name of an artifact you can enter part of the <i id="d223147e325">groupId</i> and part of the <i id="d223147e328">artifactId</i> separated by a colon (:).
<figure><img title="maven_search_artifact" src="https://www.jetbrains.com/help/img/idea/2016.1/maven_search_artifact.png" alt="maven_search_artifact" width="571" height="294" /></figure>
You can search either based on the name of artifact or the name of a class.
<figure><img title="maven_search_class" src="https://www.jetbrains.com/help/img/idea/2016.1/maven_search_class.png" alt="maven_search_class" width="569" height="299" /></figure>
</li>
</ol>
<span style="color: #404853;"> </span>
<h2 style="color: #161616;">Working with Maven Tool Window</h2>
After creating a new or importing an existing Maven project, IntelliJ IDEA displays the maven model inside the Maven tool window. You can use the Maven tool window to run maven goals, create run/debug configurations, show dependencies, customize the goal execution and perform other useful tasks.
<ol class="list _decimal">
 	<li class="list__item">On the main menu click <span class="menupath" style="font-weight: 600;">View | Tool Windows | Maven Projects</span> to open the Maven tool window.
<figure><img title="maven_tool_window" src="https://www.jetbrains.com/help/img/idea/2016.1/maven_tool_window.png" alt="maven_tool_window" width="599" height="538" /></figure>
</li>
 	<li class="list__item">You can perform the following tasks:
<ul class="list _bullet">
 	<li class="list__item">run goals
Click <img class="inline-icon-23" title="maven_goal_icon" src="https://www.jetbrains.com/help/img/idea/2016.1/maven_goal_icon.png" alt="maven_goal_icon" width="22" height="23" /> <span class="control" style="font-weight: 600;">Execute Maven Goal</span> icon.
<figure><img title="maven_exec_maven_goal" src="https://www.jetbrains.com/help/img/idea/2016.1/maven_exec_maven_goal.png" alt="maven_exec_maven_goal" width="841" height="541" /></figure>
</li>
 	<li class="list__item">create run/debug configuration for the list of goals
Highlight the goals you want to run, right-click on them and from the context menu select <span class="control" style="font-weight: 600;">Create 'mvn [name of a goal]'</span>.
<figure><img title="maven_create_run_debug_for_goals" src="https://www.jetbrains.com/help/img/idea/2016.1/maven_create_run_debug_for_goals.png" alt="maven_create_run_debug_for_goals" width="701" height="541" /></figure>
In the window that opens, specify run/debug configuration settings and click <span class="control" style="font-weight: 600;">OK</span>.
<figure><img title="maven_run_debug_config_for_goals" src="https://www.jetbrains.com/help/img/idea/2016.1/maven_run_debug_config_for_goals.png" alt="maven_run_debug_config_for_goals" width="728" height="500" /></figure>
</li>
 	<li class="list__item">display dependencies
Click <span class="control" style="font-weight: 600;">Show Dependencies</span> icon.
<figure><img title="maven_show_dependencies" src="https://www.jetbrains.com/help/img/idea/2016.1/maven_show_dependencies.png" alt="maven_show_dependencies" width="770" height="540" /></figure>
</li>
 	<li class="list__item">set triggers for running maven goals
Right-click on the goal and from the context menu select at what point IntelliJ IDEA should run your goal.
<figure><img title="maven_customize_goal_exec" src="https://www.jetbrains.com/help/img/idea/2016.1/maven_customize_goal_exec.png" alt="maven_customize_goal_exec" width="576" height="539" /></figure>
As a result, the trigger for the goal execution is displayed next to the selected goal.
<figure><img title="maven_customize_goal_exec_result" src="https://www.jetbrains.com/help/img/idea/2016.1/maven_customize_goal_exec_result.png" alt="maven_customize_goal_exec_result" width="581" height="544" /></figure>
</li>
 	<li class="list__item">assign a shortcut for running maven goal
Right-click on the goal and from the context menu select <span class="control" style="font-weight: 600;">Assign Shortcut</span>.
<figure><img title="maven_goal_shortcut" src="https://www.jetbrains.com/help/img/idea/2016.1/maven_goal_shortcut.png" alt="maven_goal_shortcut" width="578" height="535" /></figure>
In the window that opens, add the shortcut and press <span class="control" style="font-weight: 600;">OK</span>.
<figure><img title="maven_keymap_dialog" src="https://www.jetbrains.com/help/img/idea/2016.1/maven_keymap_dialog.png" alt="maven_keymap_dialog" width="555" height="586" /></figure>
</li>
</ul>
</li>
</ol>
<span style="color: #404853;"> </span>
<h2 style="color: #161616;">Working with Maven Settings</h2>
IntelliJ IDEA lets you change maven settings that are specific for your current project. Under <span class="control" style="font-weight: 600;">Maven</span> category you can find a number of options that can help you configure how your project is set up.
<figure><img title="maven_setiings_categories" src="https://www.jetbrains.com/help/img/idea/2016.1/maven_setiings_categories.png" alt="maven_setiings_categories" width="315" height="527" /></figure>
<span style="color: #404853;">For example, you can choose to work in offline mode, add repositories or change how things are imported in your project.</span>
<ol class="list _decimal">
 	<li class="list__item">On the main menu select <span class="menupath" style="font-weight: 600;">File | Settings | Build, Execution, Deployment | Build Tools | Maven</span>.
<figure><img title="maven_settings" src="https://www.jetbrains.com/help/img/idea/2016.1/maven_settings.png" alt="maven_settings" width="796" height="572" /></figure>
</li>
 	<li class="list__item">In the window that opens specify settings for your current maven project and click <span class="control" style="font-weight: 600;">OK</span></li>
</ol>
<span style="color: #404853;"> </span>